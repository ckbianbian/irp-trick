// Copyright (c) 2017-2018 Xiamen Yaji Software Co., Ltd.

CCEffect %{
  techniques:
  - passes:
    - vert: vs
      frag: fs
      blendState:
        targets:
        - blend: true
      rasterizerState:
        cullMode: none
      properties:
        texture: { value: white }
        alphaThreshold: { value: 0.5 }
}%


CCProgram vs %{
  precision highp float;

  #include <cc-global>
  #include <cc-local>

  in vec3 a_position;
  in vec4 a_color;
  out vec4 v_color;

  #if USE_TEXTURE
  in vec2 a_uv0;
  out vec2 v_uv0;
  #endif

  void main () {
    vec4 pos = vec4(a_position, 1);

    #if CC_USE_MODEL
    pos = cc_matViewProj * cc_matWorld * pos;
    #else
    pos = cc_matViewProj * pos;
    #endif

    #if USE_TEXTURE
    v_uv0 = a_uv0;
    #endif

    v_color = a_color;

    gl_Position = pos;
  }
}%


CCProgram fs %{
  precision highp float;

  #include <alpha-test>
  #include <texture>
  #include <cc-global>

  in vec4 v_color;

  #if USE_TEXTURE
  in vec2 v_uv0;
  uniform sampler2D texture;
  #endif

  float calculatePosColor (in vec2 st) {
    float upW = -0.7;
    float bottomW = 1.;
    float fY = fract(st.y);

    float dist = (1. - fY) * upW + fY * bottomW;
    return dist;
  }

  void main () {
    vec4 o = vec4(1, 1, 1, 1);
    vec2 st = v_uv0;
    float offy = sin(st.y - cc_time.x);
    float offt = sin(1.-cc_time.x);
    float w = 0.2;
    w = calculatePosColor(v_uv0);
    float offx = 0.;
    offx += offy;
    offx -= offt;
    float offs = (1. - w)/2. + offx;
    float offe = offs + w;
    st.x = (st.x - offs)/(offe - offs);
    // st.x -= 1.;

    vec4 color1 = vec4(0.,1.,0.,1.);
    vec4 color2 = vec4(0.1,0.4,0.8,1.);
    st.y = fract(st.y - cc_time.x);


    #if USE_TEXTURE
      CCTexture(texture, st, o);
    #endif

    o *= v_color;
    float tx = min(step(0., st.x), step(st.x, 1.));
    float ty = step(0.55, v_uv0.y);
    // ty = 1.;
    o = o * ty * tx + (1.-tx) * color1;
    o = o * ty + (1.-ty)*color2;

    ALPHA_TEST(o);

    #if USE_BGRA
      gl_FragColor = o.bgra;
    #else
      gl_FragColor = o.rgba;
    #endif
  }
}%
