{
  "ver": "1.0.27",
  "uuid": "23328a3e-224d-42d0-9558-53078f94e213",
  "importer": "effect",
  "compiledShaders": [
    {
      "glsl1": {
        "vert": "\nprecision highp float;\nuniform mat4 cc_matViewProj;\nuniform mat4 cc_matWorld;\nattribute vec3 a_position;\nattribute vec4 a_color;\nvarying vec4 v_color;\n#if USE_TEXTURE\nattribute vec2 a_uv0;\nvarying vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n  precision highp float;\n#if USE_ALPHA_TEST\n#endif\n  varying vec4 v_color;\n  #if USE_TEXTURE\n  varying vec2 v_uv0;\n  uniform sampler2D texture;\n  uniform sampler2D srcTexture;\n  uniform sampler2D dstTexture;\n  #endif\nvec4 getTextureColor(sampler2D texture, vec2 v_uv0) {\n    if (v_uv0.x > 1.0 || v_uv0.x < 0.0 || v_uv0.y > 1.0 || v_uv0.y < 0.0) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    }\n    return texture2D(texture, v_uv0);\n}\n  void main () {\n    vec2 st = v_uv0;\n    vec4 color = vec4(0.);\n    #if USE_TEXTURE\n      vec4 srcColor = getTextureColor(texture ,v_uv0);\n      vec4 dstColor = getTextureColor(dstTexture, v_uv0);\n      color  = srcColor*srcColor.a+ dstColor*dstColor.a;\n    #endif\n    gl_FragColor = color;\n  }"
      },
      "glsl3": {
        "vert": "\nprecision highp float;\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\nuniform CCLocal {\n  mat4 cc_matWorld;\n  mat4 cc_matWorldIT;\n};\nin vec3 a_position;\nin vec4 a_color;\nout vec4 v_color;\n#if USE_TEXTURE\nin vec2 a_uv0;\nout vec2 v_uv0;\n#endif\nvoid main () {\n  vec4 pos = vec4(a_position, 1);\n  #if CC_USE_MODEL\n  pos = cc_matViewProj * cc_matWorld * pos;\n  #else\n  pos = cc_matViewProj * pos;\n  #endif\n  #if USE_TEXTURE\n  v_uv0 = a_uv0;\n  #endif\n  v_color = a_color;\n  gl_Position = pos;\n}",
        "frag": "\n  precision highp float;\n#if USE_ALPHA_TEST\n  uniform ALPHA_TEST {\n    float alphaThreshold;\n  };\n#endif\nuniform CCGlobal {\n  mat4 cc_matView;\n  mat4 cc_matViewInv;\n  mat4 cc_matProj;\n  mat4 cc_matProjInv;\n  mat4 cc_matViewProj;\n  mat4 cc_matViewProjInv;\n  vec4 cc_cameraPos;\n  vec4 cc_time;\n  mediump vec4 cc_screenSize;\n  mediump vec4 cc_screenScale;\n};\n  in vec4 v_color;\n  #if USE_TEXTURE\n  in vec2 v_uv0;\n  uniform sampler2D texture;\n  uniform sampler2D srcTexture;\n  uniform sampler2D dstTexture;\n  #endif\nvec4 getTextureColor(sampler2D texture, vec2 v_uv0) {\n    if (v_uv0.x > 1.0 || v_uv0.x < 0.0 || v_uv0.y > 1.0 || v_uv0.y < 0.0) {\n      return vec4(0.0, 0.0, 0.0, 0.0);\n    }\n    return texture(texture, v_uv0);\n}\n  void main () {\n    vec2 st = v_uv0;\n    vec4 color = vec4(0.);\n    #if USE_TEXTURE\n      vec4 srcColor = getTextureColor(texture ,v_uv0);\n      vec4 dstColor = getTextureColor(dstTexture, v_uv0);\n      color  = srcColor*srcColor.a+ dstColor*dstColor.a;\n    #endif\n    gl_FragColor = color;\n  }"
      }
    }
  ],
  "subMetas": {}
}